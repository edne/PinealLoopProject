(alias bg       background)
(alias black-bg bg 0 0 0 1)

(alias triangle polygon 3)
(alias square polygon 4)
(alias circle polygon 50)

(black-bg)


;(def r (sin (time)))
(def r 1)


(-@> (pEntity (circle 0.5))
     (scale 0.5 0.5 0.5)
     (no-fill)
     (scale 0.5 1 1))

(compose branch-1
         (scale 0.7 0.7 0.7)
         (translate 0.3 0 0)
         ;(rotate-z (% (time) 2pi))
         ;(translate 0.0 0.0 0.101)
         )


(compose branch-2
         (scale 0.3 1 1)
         ;(translate (* -0.7 (sin (% (time) 2pi))))
         (translate -0.7 0 0)
         ;(rotate-z (% (time) 2pi))
         ;(translate 0.0 0.0 0.1)
         )

'(-@> (recursion 200 (@ (-@> (circle r)
                             (color 1 1 1 1)
                             (no-fill))
                        ;(-@> (circle r)
                        ;     (color 1 1 1 (amp 10))
                        ;     (fill))
                        )
                 (circle r)
                 (branch-1)
                 (branch-2))
      (line-width 2)
      ;(scale (osc /rad 0.25))
      ;(scale 1.5)
      ;(translate 0.1 0 -1)
      (rotate-x -0.8)
      (rotate-z 0.3)
      (color 1 1 1 0.7)
      (fill))

'(on level-1
     (@ (background 1 1 1 0)
        (-@> (cube 1)
             (no-fill)
             (line-width 1)
             (color 0 1 1 1.0)
             (turn-x 1)
             (turn-y 1)
             (rotate-x (-> (time (/ pi 4)) (% 2pi)))
             )))


'(-@> (polygon 3 0.5)
      (no-fill)
      (color 0 1 0 1)
      (line-width 2))

'(at (beat 1 0.5)
     (-@> (polygon 3 0.25)
          (no-fill)
          (translate 0 0.5 0)
          (color 0 1 0 1)
          (turn-z 3)
          (line-width 2)))

;(at (beat 4 2) (level-1))

'(-@> (cube 1.8)
      (line-width 2)
      (no-fill)
      (color 1 1 1 1)
      (line-width 4)
      (turn-z 64)
      (turn-y 16)
      (rotate-y (-> (time (/ pi 4)) (% 2pi)))
      )


'(value rot (% (time 4) 2pi))

'(-@> (@ (-@> (cube 1)
              (rotate-x (rot)))
         (-@> (cube 1)
              (rotate-x (rot -1)))
         (-@> (cube 1)
              (rotate-y (rot)))
         (-@> (cube 1)
              (rotate-y (rot -1))))

      (turn 30)
      (no-fill)
      (color 0 1 0 1))
