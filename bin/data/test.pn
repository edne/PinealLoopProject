(defn turn [n rotate-fun]
  (branch-for [i (range n)]
              (rotate-fun (-> i (* 2pi) (/ n)))))


(defn concentric [n]
  (branch-for [i (range 1 n)]
              (scale [(-> 1 (/ i) (- (/ 1 n)))])))


(defn concentric-lin [n]
  (branch-for [i (range 1 n)]
              (scale [(-> 1 (/ n) (* i))])))


(def some-cubes
  (change (cube)
          (scale [0.5])
          (concentric-lin 4)
          (rotate_y (/ pi 4))
          (translate [0.2])
          (turn 4 rotate-y)

          (line-width 4)
          (no-fill)
          (color [0 1 0])))


(def concentric-squares
  (change (polygon 4)
          (concentric 10)
          (rotate-x (amp 8))
          (line-width 4)
          (no-fill)
          (color [0 1 1])))


(background 0 0 0 1)

(-> (seq 2
         [0 some-cubes 1]
         [1 concentric-squares 1]
         )
  draw)
